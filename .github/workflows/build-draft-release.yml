name: Build draft release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

permissions:
  contents: write

jobs:
  build-draft-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get RELEASE_VERSION
        run: |
          if [[ -z "${{ github.event.inputs.version }}" ]]; then
            echo "Error: No version passed"
            exit 1
          fi

          RELEASE_VERSION="${{ github.event.inputs.version }}"
          echo "Release version (name): $RELEASE_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install -g openapi-merge-cli

      - run: echo "PyYAML==5.4.1" > requirements.txt
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install pyyaml

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - run: curl https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.7.0/openapi-generator-cli-7.7.0.jar -o openapi-generator-cli.jar

# Create doc
      - name: Create Merchant Spec (Docs)
        run: python3 ./rest/script/yaml-merge.py ./rest/processing/part-doc-api.yaml ./api-merchant.yaml /info > ./api-merchant-doc.yaml

      - name: Create Merchant Docs
        run: |
          rm -rf docs
          java -jar openapi-generator-cli.jar generate -i api-merchant-doc.yaml -g html2 -o docs

      - name: Add api-merchant.yaml to docs/ folder
        run: cp api-merchant.yaml ./docs/api.yaml

      - name: Archive Merchant Docs
        run: |
          tar cvf docs.tar ./docs/*

# Create merchant API
      - name: Create api dir
        run: |
          mkdir ./api

      - name: Delete discriminator (AWS doesn't support)
        run: |
          sed '/discriminator/,/CreditCard: CreditCardDetails/d' api-merchant.yaml > prepared-api-merchant.yaml

      - name: Create Extended Merchant Spec (API)
        run: openapi-merge-cli --config ./rest/processing/merge-config.json

      - name: Create Merchant Spec (AWS)
        run: python3 ./rest/script/yaml-merge.py ./rest/processing/part-aws-api.yaml ./api-merchant-extended.yaml x-amazon- > ./api/merchant.yaml

      - name: Validation Merchant Spec (AWS)
        run: java -jar openapi-generator-cli.jar validate -i ./api/merchant.yaml --recommend

# Create portal API
      - name: Create Extended Portal Spec (API)
        run: openapi-merge-cli --config ./rest/portal/merge-config.json

      - name: Create Portal Spec (API)
        run: java -jar openapi-generator-cli.jar generate -i ./rest/api-portal-extended.yaml -g openapi-yaml -o ./temp --additional-properties outputFile=./api-portal-merchant.yaml

      - name: Delete discriminator (AWS doesn't support)
        run: |
          sed '/discriminator/,/propertyName: paymentMethod/d' ./temp/api-portal-merchant.yaml > ./temp/prepared-api-portal-merchant.yaml

      - name: Refactor Portal Spec (AWS)
        run: sed 's|BaseTransaction_allOf_paymentDetails|BaseTransactionPaymentDetails|g' ./temp/prepared-api-portal-merchant.yaml > ./api-portal-merchant.yaml

      - name: Create Portal Spec (AWS)
        run: python3 ./rest/script/yaml-merge.py ./rest/portal/part-aws-api.yaml ./api-portal-merchant.yaml x-amazon- > ./api/portal.yaml

      - name: Validation Portal Spec (AWS)
        run: java -jar openapi-generator-cli.jar validate -i ./api/portal.yaml --recommend

# Update API spec versions
      - name: Bump versions
        run: |
          sed -i "s|^\([[:space:]]*version:\).*|\1 ${RELEASE_VERSION}|" ./api/merchant.yaml
          sed -i "s|^\([[:space:]]*version:\).*|\1 ${RELEASE_VERSION}|" ./api/portal.yaml

# Create Draft Release
      - name: Archive Portal and Merchant Specs
        run: |
          tar cvf api.tar ./api/portal.yaml ./api/merchant.yaml

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Attache build to draft release
        run: gh release upload ${{ env.RELEASE_VERSION }} api.tar docs.tar --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
