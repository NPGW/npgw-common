openapi: 3.0.3

info:
  title: NPGW Portal API
  version: 0.1.2

servers:
  - url: https://npgw.xyz/portal-v1/

paths:
  /user/token:
    post:
      operationId: getToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthorization'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserToken'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/create:
    post:
      operationId: createUser
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreation'
        required: true
      responses:
        '201':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/challenge:
    post:
      operationId: challengeUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserChallenge'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/password/reset:
    post:
      operationId: resetUserPassword
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthorization'
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/password/change:
    post:
      operationId: changeUserPassword
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthorization'
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/list/{companyName}:
    get:
      operationId: getUsers
      security:
        - apiKeyAuth: []
      parameters:
        - description: Company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user:
    get:
      operationId: getOneUser
      security:
        - apiKeyAuth: []
      parameters:
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteUser
      security:
        - apiKeyAuth: []
      parameters:
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: updateUser
      security:
        - apiKeyAuth: []
      parameters:
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company:
    get:
      operationId: getAllCompanies
      security:
        - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createCompany
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: New company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company/{companyName}:
    get:
      operationId: getOneCompany
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: updateCompany
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: Updated company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteCompany
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company/{companyName}/merchant:
    get:
      operationId: getAllMerchants
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merchant'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createMerchant
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merchant'
        description: New merchant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company/{companyName}/merchant/{merchantId}:
    post:
      operationId: createSecretToken
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
        - description: The merchant id
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    get:
      operationId: getOneMerchant
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
        - description: The merchant id
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: updateMerchant
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
        - description: The merchant id
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merchant'
        description: Updated merchant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteMerchant
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
        - description: The merchant id
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company/{companyName}/merchant/user:
    get:
      operationId: getUserMerchants
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merchant'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /acquirer:
    get:
      operationId: getAllAcquirers
      security:
        - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Acquirer'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createAcquirer
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Acquirer'
        description: Creating acquirer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Created acquirer
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /acquirer/{acquirerName}:
    get:
      operationId: getOneAcquirer
      security:
        - apiKeyAuth: []
      parameters:
        - description: The acquirer name
          in: path
          name: acquirerName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: updateAcquirer
      security:
        - apiKeyAuth: []
      parameters:
        - description: The acquirer name
          in: path
          name: acquirerName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Acquirer'
        description: Updating acquirer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Updated acquirer
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteAcquirer
      security:
        - apiKeyAuth: []
      parameters:
        - description: The acquirer name
          in: path
          name: acquirerName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /merchant-acquirer:
    post:
      operationId: addMerchantAcquirerItem
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMerchantAcquirerItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /merchant-acquirer/{merchantId}:
    get:
      operationId: getOneMerchantAcquirer
      security:
        - apiKeyAuth: []
      parameters:
        - description: The merchant Id
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteMerchantAcquirer
      security:
        - apiKeyAuth: []
      parameters:
        - description: The merchant Id
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /merchant-acquirer/{merchantId}/{priority}:
    get:
      operationId: getOneMerchantAcquirerItem
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: merchantId
          schema:
            type: string
          required: true
        - in: path
          name: priority
          schema:
            type: integer
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
                type: array
                items:
                  $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: updateMerchantAcquirerItem
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: merchantId
          schema:
            type: string
          required: true
        - in: path
          name: priority
          schema:
            type: integer
          required: true
        - in: query
          name: up
          schema:
            type: string
        - in: query
          name: down
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteMerchantAcquirerItem
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: merchantId
          schema:
            type: string
          required: true
        - in: path
          name: priority
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /transaction/history:
    post:
      operationId: getTransactionHistoryList
      security:
        - apiKeyAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 25
        - description: Comma-separated string of fields to sort by. For descending order put a minus sign prefix (-)
          in: query
          name: sort
          required: false
          schema:
            type: string
          example: currency,-createdOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionHistoryFilter'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../api-merchant.yaml#/components/schemas/TransactionInfo'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /transaction/summary:
    post:
      operationId: getTransactionSummaryList
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSummaryFilter'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionSummary'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: JWT-based authentication where the token is passed in the Authorization header.

  schemas:
    UserChallengeType:
      type: string
      description: |
        NONE - none.
        NEW_PASSWORD_REQUIRED - you need to change your password.
      enum:
        - NONE
        - NEW_PASSWORD_REQUIRED

    UserChallenge:
      type: object
      required:
        - userChallengeType
      properties:
        userChallengeType:
          $ref: '#/components/schemas/UserChallengeType'
        sessionId:
          type: string
          description: Challenge session id.

    RequestUserChallenge:
      allOf:
        - $ref: '#/components/schemas/UserChallenge'
        - type: object
          required:
            - sessionId
          properties:
            data:
              $ref: '#/components/schemas/UserAuthorization'

    ResponseUserToken:
      allOf:
        - $ref: '#/components/schemas/UserChallenge'
        - type: object
          properties:
            token:
              $ref: '../api-merchant.yaml#/components/schemas/ResponseToken'

    UserRole:
      type: string
      description: |
        SUPER - can control all users in the system.
        ADMIN - can control all users in the company.
        USER - has access to analytics.
      enum:
        - SUPER
        - ADMIN
        - USER

    UserAuthorization:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    UserDetails:
      type: object
      properties:
        userRole:
          $ref: '#/components/schemas/UserRole'
        merchantIds:
          type: array
          items:
            type: string
        enabled:
          type: boolean

    User:
      allOf:
        - $ref: '#/components/schemas/UserDetails'
        - type: object
          required:
            - userRole
            - email
            - companyName
          properties:
            email:
              type: string
            companyName:
              type: string

    UserCreation:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - password
          properties:
            password:
              type: string

    CompanyAddress:
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        mobile:
          type: string
        fax:
          type: string

    Company:
      type: object
      required:
        - companyName
      properties:
        companyName:
          type: string
        companyType:
          type: string
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        description:
          type: string
        website:
          type: string
        primaryContact:
          type: string
        email:
          type: string
        isPortalActive:
          type: boolean
          default: true
        isApiActive:
          type: boolean
          default: true

    Merchant:
      type: object
      required:
        - merchantTitle
      properties:
        merchantId:
          type: string
        merchantTitle:
          type: string

    SystemConfig:
      type: object
      required:
        - challengeUrl
        - fingerprintUrl
        - resourceUrl
      properties:
        challengeUrl:
          type: string
        fingerprintUrl:
          type: string
        resourceUrl:
          type: string
        notificationQueue:
          type: string

    AcquirerCode:
      type: string
      description: An implemented acquirer
      enum:
        - NGenius

    BaseAcquirer:
      type: object
      required:
        - acquirerCode
        - currencyList
        - systemConfig
      properties:
        acquirerDisplayName:
          type: string
        acquirerMid:
          type: string
        acquirerCode:
          $ref: '#/components/schemas/AcquirerCode'
        acquirerConfig:
          type: string
        currencyList:
          type: array
          items:
            $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        isActive:
          type: boolean
          default: true

    Acquirer:
      allOf:
        - $ref: '#/components/schemas/BaseAcquirer'
        - type: object
          required:
            - acquirerName
          properties:
            acquirerName:
              type: string
            acquirerMidMcc:
              type: string

    MerchantAcquirerItem:
      allOf:
        - $ref: '#/components/schemas/BaseAcquirer'
        - type: object
          properties:
            priority:
              type: integer

    AddMerchantAcquirerItem:
      type: object
      required:
        - merchantId
        - acquirerName
        - currencyList
      properties:
        merchantId:
          type: string
        acquirerName:
          type: string
        currencyList:
          type: array
          items:
            $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        isActive:
          type: boolean
          default: true

    MerchantAcquirer:
      type: object
      properties:
        merchantId:
          type: string
        acquirerList:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAcquirerItem'

    TransactionHistoryFilter:
      type: object
      required:
        - merchantId
      properties:
        merchantId:
          type: string
        transactionId:
          type: string
        dateFrom:
          format: date-time
          type: string
          description: ISO 8601
          example: 2021-12-22T05:16:56.323Z
        dateTo:
          format: date-time
          type: string
          description: ISO 8601
          example: 2021-12-22T05:16:56.323Z
        currency:
          $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        paymentMethod:
          $ref: '../api-merchant.yaml#/components/schemas/PaymentMethod'
        amountFrom:
          type: integer
        amountTo:
          type: integer
        cardType:
          $ref: '../api-merchant.yaml#/components/schemas/CardType'
        status:
          $ref: '../api-merchant.yaml#/components/schemas/TransactionStatus'

    TransactionSummary:
      type: object
      properties:
        merchantId:
          type: string
        updatedOn:
          format: date-time
          type: string
          description: ISO 8601
          example: 2021-12-22T05:16:56.323Z
        status:
          $ref: '../api-merchant.yaml#/components/schemas/TransactionStatus'
        currency:
          $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        totalAmount:
          type: integer
        totalCount:
          type: integer

    TransactionSummaryFilter:
      type: object
      required:
        - merchantId
      properties:
        merchantId:
          type: string
        dateFrom:
          format: date-time
          type: string
          description: ISO 8601
          example: 2021-12-22T05:16:56.323Z
        dateTo:
          format: date-time
          type: string
          description: ISO 8601
          example: 2021-12-22T05:16:56.323Z
        currency:
          $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
