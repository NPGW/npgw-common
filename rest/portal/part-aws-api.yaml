paths:
  /user/token:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/token'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/token/refresh:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/token/refresh'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/create:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/create'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/challenge:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/challenge'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/password/reset:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/password/reset'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/password/change:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/password/change'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/list/{companyName}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/user/list/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

  /user:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"


  /company:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/company'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /company/{companyName}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/company/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/company/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

  /company/{companyName}/merchant:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company/{companyName}/merchant'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/company/{companyName}/merchant'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

  /company/{companyName}/merchant/{merchantId}:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/company/{companyName}/merchant/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName
          integration.request.path.merchantId: method.request.path.merchantId

    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company/{companyName}/merchant/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName
          integration.request.path.merchantId: method.request.path.merchantId

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/company/{companyName}/merchant/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName
          integration.request.path.merchantId: method.request.path.merchantId

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/company/{companyName}/merchant/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName
          integration.request.path.merchantId: method.request.path.merchantId

  /company/{companyName}/merchant/user:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company/{companyName}/merchant/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

  /acquirer:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /acquirer/{acquirerName}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/acquirer/{acquirerName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.acquirerName: method.request.path.acquirerName

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/acquirer/{acquirerName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.acquirerName: method.request.path.acquirerName

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/acquirer/{acquirerName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.acquirerName: method.request.path.acquirerName

  /merchant-acquirer:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/merchant-acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /merchant-acquirer/{merchantId}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/merchant-acquirer/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/merchant-acquirer/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId

  /merchant-acquirer/{merchantId}/{priority}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/merchant-acquirer/{merchantId}/{priority}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId
          integration.request.path.priority: method.request.path.priority

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/merchant-acquirer/{merchantId}/{priority}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId
          integration.request.path.priority: method.request.path.priority

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/merchant-acquirer/{merchantId}/{priority}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId
          integration.request.path.priority: method.request.path.priority

  /control:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/control'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/control'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /control/{controlName}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/control/{controlName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.controlName: method.request.path.controlName

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/control/{controlName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.controlName: method.request.path.controlName

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/control/{controlName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.controlName: method.request.path.controlName

  /merchant-control:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/merchant-control'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /merchant-control/{merchantId}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/merchant-control/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/merchant-control/{merchantId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId

  /merchant-control/{merchantId}/{priority}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/merchant-control/{merchantId}/{priority}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId
          integration.request.path.priority: method.request.path.priority

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/merchant-control/{merchantId}/{priority}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId
          integration.request.path.priority: method.request.path.priority

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/merchant-control/{merchantId}/{priority}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.merchantId: method.request.path.merchantId
          integration.request.path.priority: method.request.path.priority

  /transaction/log:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/transaction/log'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /transaction/status:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/transaction/status'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /transaction/summary:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/transaction/summary'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /info:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/info'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

components:
  securitySchemes:
    apiKeyAuth:
      x-amazon-apigateway-authtype: ${x-amazon-apigateway-authtype}
      x-amazon-apigateway-authorizer:
        ${x-amazon-apigateway-authorizer}

x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseTemplates:
      application/json: |
        {
          "message": "$context.error.message",
          "timestamp": $context.requestTimeEpoch,
          "path": "$context.path",
          "status": $context.responseOverride.status
        }

  MISSING_AUTHENTICATION_TOKEN:
    responseTemplates:
      application/json: |
        {
          "message": "Invalid authorization header",
          "timestamp": $context.requestTimeEpoch,
          "path": "$context.path",
          "status": 403
        }
