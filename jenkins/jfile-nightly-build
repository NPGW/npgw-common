pipeline {
    agent { label 'build-node' }

    environment {
        AWS_REGION = 'eu-central-1'
        AWS_BUCKET_NAME = 'npgw-versions'
        AWS_REPOSITORY_URL = '214404897309.dkr.ecr.eu-central-1.amazonaws.com'
        AWS_ROLE = 'arn:aws:iam::214404897309:role/npgw-jenkins-build-a-version-role'

        IMAGE_FILE = '.github/IMAGE_LIST.json'
        REPO_FILE = 'pipeline/REPO_LIST.json'
    }

    stages {

    stage('Cleanup old ECR & S3 builds') {
        steps {
            script {
                def keepCount = 5
                def suffixes = ['nightly', 'draft', 'rc', 'release']
                def imageList = readJSON text: sh(script: "cat ${WORKSPACE}/${IMAGE_FILE}", returnStdout: true).trim()

                imageList.each { image ->
                    suffixes.each { suf ->
                        def tagsRaw = sh(script: """
                            aws ecr list-images \
                              --repository-name npgw/${image.repoName} \
                              --filter "tagStatus=TAGGED" \
                              --query 'imageIds[?ends_with(imageTag, `-${suf}`)].imageTag' \
                              --output text
                        """, returnStdout: true).trim()

                        def tags = tagsRaw ? tagsRaw.tokenize().collect { fullTag ->
                            fullTag.split('-', 2)[0]
                        } : []

                        echo "${tags}"

                        if (tags.size() > keepCount) {
                          def sorted = tags.sort { tag ->
                              (tag =~ /.*\.(\d{10})-${suf}$/)[0][1]
                          }

                          echo "${sorted}"

                          def toDelete = sorted.take(sorted.size() - keepCount)

                            toDelete.each { tag ->
                                echo "Deleting old image: npgw/${image.repoName}:${tag}"

                            }
                        } else {
                            echo "Repository npgw/${image.repoName}: only ${tags.size()} '${suf}' tags, nothing to delete."
                        }
                    }
                }
            }
        }
    }

    }



}