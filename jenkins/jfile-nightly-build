pipeline {
    agent { label 'build-node' }

    environment {
        AWS_REGION = 'eu-central-1'
        AWS_BUCKET_NAME = 'npgw-versions'
        AWS_REPOSITORY_URL = '214404897309.dkr.ecr.eu-central-1.amazonaws.com'
        AWS_ROLE = 'arn:aws:iam::214404897309:role/npgw-jenkins-build-a-version-role'

        IMAGE_FILE = '.github/IMAGE_LIST.json'
        REPO_FILE = 'pipeline/REPO_LIST.json'
    }

    stages {
            stage('Test') {
                steps {
                      script {
                                // 1. List all tags (tab-separated), one per line
                                def allTags = sh(
                                  script: """
                                    aws ecr list-images \
                                      --repository-name npgw/portal \
                                      --filter tagStatus=TAGGED \
                                      --query 'imageIds[].imageTag' \
                                      --output text
                                  """,
                                  returnStdout: true
                                ).trim().split()

                                // 2. Keep only tags like X.Y.<10-digit>-suffix
                                def filtered = allTags.findAll { it ==~ /^[0-9]+\\.[0-9]+\\.(\\d{10})-.+$/ }

                                // 3. Build a map tag -> numeric date‐string
                                def dateMap = [:]
                                filtered.each { tag ->
                                  def m = (tag =~ /^[0-9]+\\.[0-9]+\\.(\\d{10})-.+$/)
                                  dateMap[tag] = m[0][1].toLong()   // e.g. "2506281212" -> 2506281212L
                                }

                                // 4. Sort by that numeric key, descending
                                def sortedTags = dateMap.sort { a, b -> b.value <=> a.value }.keySet()

                                // 5. Take the 5 newest
                                def latest5 = sortedTags.take(5)
                                echo "Latest 5 ECR tags: ${latest5.join(', ')}"

                                // make it available for downstream stages if needed
                                env.LATEST_5_TAGS = latest5.join(',')
                              }
                }
            }
    }
}